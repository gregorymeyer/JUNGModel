<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE metrics SYSTEM "http://depfind.sourceforge.net/dtd/metrics.dtd">

<metrics>
    <project>
        <name>Project</name>
        <measurement>
            <short-name>G</short-name>
            <long-name>Groups</long-name>
            <value>31.0</value>
        </measurement>
        <measurement>
            <short-name>P</short-name>
            <long-name>Packages</long-name>
            <value>31</value>
            <members>
                <member>org.junit.experimental.theories.suppliers</member>
                <member>org.junit.experimental.theories</member>
                <member>org.junit.experimental.theories.internal</member>
                <member>org.junit.internal</member>
                <member>org.junit.internal.runners</member>
                <member>junit.runner</member>
                <member>org.junit.internal.runners.model</member>
                <member>junit.textui</member>
                <member>junit.extensions</member>
                <member>org.junit.runner.manipulation</member>
                <member>org.junit.experimental.categories</member>
                <member>org.junit.rules</member>
                <member>junit.framework</member>
                <member>org.junit.runners</member>
                <member>org.junit.runner</member>
                <member>org.junit.matchers</member>
                <member>org.hamcrest</member>
                <member>org.junit.runner.notification</member>
                <member>org.junit.experimental.results</member>
                <member>org.junit.experimental.max</member>
                <member>org.junit.internal.builders</member>
                <member>org.junit</member>
                <member>org.junit.experimental.runners</member>
                <member>org.junit.internal.matchers</member>
                <member>org.junit.internal.runners.rules</member>
                <member>org.hamcrest.internal</member>
                <member>org.junit.internal.requests</member>
                <member>org.hamcrest.core</member>
                <member>org.junit.runners.model</member>
                <member>org.junit.experimental</member>
                <member>org.junit.internal.runners.statements</member>
            </members>
        </measurement>
        <measurement>
            <short-name>C</short-name>
            <long-name>Classes</long-name>
            <value>250.0</value>
            <minimum>1.0</minimum>
            <median>7.0</median>
            <average>8.064516129032258</average>
            <standard-deviation>5.242109178263711</standard-deviation>
            <maximum>19.0</maximum>
            <sum>250.0</sum>
            <nb-data-points>31</nb-data-points>
        </measurement>
        <measurement>
            <short-name>SLOC</short-name>
            <long-name>Single Lines of Code</long-name>
            <value>3905.0</value>
            <minimum>3.0</minimum>
            <median>113.0</median>
            <average>125.96774193548387</average>
            <standard-deviation>115.68379702837017</standard-deviation>
            <maximum>517.0</maximum>
            <sum>3905.0</sum>
            <nb-data-points>31</nb-data-points>
        </measurement>
        <group>
            <name>junit.extensions</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>7.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>4.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>75.0</value>
                <minimum>1.0</minimum>
                <median>8.0</median>
                <average>10.714285714285714</average>
                <standard-deviation>7.477858473315658</standard-deviation>
                <maximum>26.0</maximum>
                <sum>75.0</sum>
                <nb-data-points>7</nb-data-points>
            </measurement>
            <class>
                <name>junit.extensions.ActiveTestSuite</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>7.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>junit.extensions.ActiveTestSuite.ActiveTestSuite()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.ActiveTestSuite.runFinished()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.ActiveTestSuite.waitUntilFinished()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.extensions.ActiveTestSuite$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.ActiveTestSuite$1.run()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.extensions.RepeatedTest</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.RepeatedTest.countTestCases()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.RepeatedTest.run(junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.RepeatedTest.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.extensions.TestDecorator</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.TestDecorator.countTestCases()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.TestDecorator.getTest()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.TestDecorator.run(junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.TestDecorator.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.extensions.TestSetup</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.extensions.TestSetup.TestSetup(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.TestSetup.run(junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.TestSetup.setUp()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.TestSetup.tearDown()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.extensions.TestSetup$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.extensions.TestSetup$1.protect()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>junit.framework</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>18.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>14.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>517.0</value>
                <minimum>1.0</minimum>
                <median>12.0</median>
                <average>28.72222222222222</average>
                <standard-deviation>33.89822275832229</standard-deviation>
                <maximum>109.0</maximum>
                <sum>517.0</sum>
                <nb-data-points>18</nb-data-points>
            </measurement>
            <class>
                <name>junit.framework.Assert</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>38.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.framework.Assert.Assert()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(boolean, boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(byte, byte)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(char, char)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(double, double, double)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(float, float, float)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(int, int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(java.lang.String, char, char)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(java.lang.String, int, int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(java.lang.String, long, long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(java.lang.String, short, short)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(long, long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertEquals(short, short)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertFalse(boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertFalse(java.lang.String, boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertNotNull(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertNull(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertTrue(boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.assertTrue(java.lang.String, boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.fail()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.fail(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.failSame(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.AssertionFailedError</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>junit.framework.AssertionFailedError.AssertionFailedError()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.ComparisonCompactor</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>8.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>8.0</value>
                </measurement>
                <method>
                    <name>junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.ComparisonCompactor.areStringsEqual()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.ComparisonCompactor.compact(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.ComparisonCompactor.compactString(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.ComparisonCompactor.computeCommonPrefix()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.ComparisonCompactor.computeCommonSuffix()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.ComparisonCompactor.findCommonPrefix()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.ComparisonCompactor.findCommonSuffix()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>8.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.ComparisonFailure</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <method>
                    <name>junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.ComparisonFailure.getActual()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.ComparisonFailure.getExpected()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.ComparisonFailure.getMessage()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.JUnit4TestAdapter</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>10.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <method>
                    <name>junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapter.countTestCases()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapter.filter(org.junit.runner.manipulation.Filter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapter.getDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapter.getTestClass()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapter.getTests()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapter.isIgnored(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapter.removeIgnored(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapter.sort(org.junit.runner.manipulation.Sorter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapter.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.JUnit4TestAdapterCache</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>junit.framework.JUnit4TestAdapterCache.JUnit4TestAdapterCache()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapterCache.getDefault()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapterCache.static {}</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.JUnit4TestAdapterCache$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.JUnit4TestCaseFacade</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>junit.framework.JUnit4TestCaseFacade.JUnit4TestCaseFacade(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestCaseFacade.countTestCases()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestCaseFacade.getDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestCaseFacade.run(junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.JUnit4TestCaseFacade.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.Protectable</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.framework.Protectable.protect()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.Test</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.framework.Test.countTestCases()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.Test.run(junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.TestCase</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>9.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>junit.framework.TestCase.TestCase()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestCase.TestCase(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestCase.countTestCases()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestCase.createResult()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestCase.getName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestCase.run()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestCase.run(junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestCase.runBare()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>23.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestCase.runTest()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>17.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestCase.setName(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestCase.setUp()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestCase.tearDown()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestCase.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.TestFailure</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>7.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestFailure.exceptionMessage()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestFailure.failedTest()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestFailure.isFailure()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestFailure.thrownException()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestFailure.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestFailure.trace()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.TestListener</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.framework.TestListener.addError(junit.framework.Test, java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestListener.endTest(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestListener.startTest(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.TestResult</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>16.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>junit.framework.TestResult.TestResult()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.addListener(junit.framework.TestListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.cloneListeners()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.endTest(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.errorCount()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.errors()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.failureCount()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.failures()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.removeListener(junit.framework.TestListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.run(junit.framework.TestCase)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.runCount()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.shouldStop()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.startTest(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.stop()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult.wasSuccessful()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.TestResult$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestResult$1.protect()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.TestSuite</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>20.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>junit.framework.TestSuite.TestSuite()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.TestSuite(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.TestSuite(java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.TestSuite(java.lang.Class[], java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.TestSuite(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.addTest(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.addTestSuite(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.addTestsFromTestCase(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>19.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.countTestCases()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>17.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.getName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.getTestConstructor(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.run(junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.setName(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.testAt(int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.testCaseForClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.testCount()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.tests()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite.warning(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.framework.TestSuite$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.framework.TestSuite$1.runTest()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>junit.runner</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>4.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>3.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>167.0</value>
                <minimum>1.0</minimum>
                <median>9.0</median>
                <average>41.75</average>
                <standard-deviation>63.14022093721244</standard-deviation>
                <maximum>151.0</maximum>
                <sum>167.0</sum>
                <nb-data-points>4</nb-data-points>
            </measurement>
            <class>
                <name>junit.runner.BaseTestRunner</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>19.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>10.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>junit.runner.BaseTestRunner.BaseTestRunner()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.addError(junit.framework.Test, java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.clearStatus()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.elapsedTimeAsString(long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.endTest(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.extractClassName(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.filterLine(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>13.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.getPreference(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>8.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.getPreferences()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.getPreferencesFile()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.getTest(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>37.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.processArguments(java.lang.String[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>14.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.readPreferences()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>11.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.runFailed(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.savePreferences()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.setLoading(boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.setPreferences(java.util.Properties)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.showStackRaw()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.startTest(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.static {}</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.testEnded(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.testStarted(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.truncate(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.runner.TestRunListener</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.runner.TestRunListener.testEnded(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.TestRunListener.testFailed(int, java.lang.String, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.TestRunListener.testRunEnded(long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.TestRunListener.testRunStarted(java.lang.String, int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.TestRunListener.testRunStopped(long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.TestRunListener.testStarted(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.runner.Version</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.runner.Version.Version()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.Version.id()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.runner.Version.main(java.lang.String[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>junit.textui</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>3.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>2.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>141.0</value>
                <minimum>1.0</minimum>
                <median>58.0</median>
                <average>47.0</average>
                <standard-deviation>33.97057550292606</standard-deviation>
                <maximum>82.0</maximum>
                <sum>141.0</sum>
                <nb-data-points>3</nb-data-points>
            </measurement>
            <class>
                <name>junit.textui.ResultPrinter</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>7.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>8.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.elapsedTimeAsString(long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.endTest(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.getWriter()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>8.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.printHeader(long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.printWaitPrompt()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.ResultPrinter.startTest(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>junit.textui.TestRunner</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>14.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>junit.textui.TestRunner.TestRunner()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.TestRunner(java.io.PrintStream)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.createTestResult()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.doRun(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.main(java.lang.String[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.pause(boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.run(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.run(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.runAndWait(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.runFailed(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.setPrinter(junit.textui.ResultPrinter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.start(java.lang.String[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>25.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.testEnded(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>junit.textui.TestRunner.testStarted(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.hamcrest</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>8.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>8.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>127.0</value>
                <minimum>1.0</minimum>
                <median>7.0</median>
                <average>15.875</average>
                <standard-deviation>21.12721881838686</standard-deviation>
                <maximum>68.0</maximum>
                <sum>127.0</sum>
                <nb-data-points>8</nb-data-points>
            </measurement>
            <class>
                <name>org.hamcrest.BaseDescription</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>7.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.BaseDescription.BaseDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseDescription.append(char)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseDescription.append(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseDescription.appendDescriptionOf(org.hamcrest.SelfDescribing)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseDescription.appendList(java.lang.String, java.lang.String, java.lang.String, java.lang.Iterable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseDescription.appendList(java.lang.String, java.lang.String, java.lang.String, java.util.Iterator)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseDescription.appendText(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseDescription.appendValue(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>27.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseDescription.appendValueList(java.lang.String, java.lang.String, java.lang.String, java.lang.Iterable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseDescription.appendValueList(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseDescription.appendValueList(java.lang.String, java.lang.String, java.lang.String, java.util.Iterator)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseDescription.toJavaSyntax(char)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>11.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseDescription.toJavaSyntax(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.BaseMatcher</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.BaseMatcher.BaseMatcher()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseMatcher._dont_implement_Matcher___instead_extend_BaseMatcher_()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.BaseMatcher.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.CoreMatchers</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>21.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.CoreMatchers.CoreMatchers()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.allOf(java.lang.Iterable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.allOf(org.hamcrest.Matcher[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.any(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.anyOf(java.lang.Iterable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.anyOf(org.hamcrest.Matcher[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.anything()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.anything(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.describedAs(java.lang.String, org.hamcrest.Matcher, java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.equalTo(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.instanceOf(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.is(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.is(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.is(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.not(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.notNullValue()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.notNullValue(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.nullValue()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.nullValue(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.CoreMatchers.sameInstance(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.Description</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.Description.appendDescriptionOf(org.hamcrest.SelfDescribing)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.Description.appendList(java.lang.String, java.lang.String, java.lang.String, java.lang.Iterable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.Description.appendText(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.Description.appendValue(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.Description.appendValueList(java.lang.String, java.lang.String, java.lang.String, java.lang.Iterable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.Description.appendValueList(java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.Matcher</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.Matcher._dont_implement_Matcher___instead_extend_BaseMatcher_()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.Matcher.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.SelfDescribing</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.SelfDescribing.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.StringDescription</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.StringDescription.StringDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.StringDescription.StringDescription(java.lang.Appendable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.StringDescription.append(char)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.StringDescription.append(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.StringDescription.asString(org.hamcrest.SelfDescribing)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.StringDescription.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.StringDescription.toString(org.hamcrest.SelfDescribing)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.hamcrest.core</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>10.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>10.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>134.0</value>
                <minimum>9.0</minimum>
                <median>13.0</median>
                <average>13.4</average>
                <standard-deviation>4.963869458396343</standard-deviation>
                <maximum>24.0</maximum>
                <sum>134.0</sum>
                <nb-data-points>10</nb-data-points>
            </measurement>
            <class>
                <name>org.hamcrest.core.AllOf</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.core.AllOf.AllOf(java.lang.Iterable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.AllOf.allOf(java.lang.Iterable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.AllOf.allOf(org.hamcrest.Matcher[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.AllOf.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.AllOf.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.core.AnyOf</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.core.AnyOf.AnyOf(java.lang.Iterable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.AnyOf.anyOf(java.lang.Iterable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.AnyOf.anyOf(org.hamcrest.Matcher[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.AnyOf.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.AnyOf.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.core.DescribedAs</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.core.DescribedAs.DescribedAs(java.lang.String, org.hamcrest.Matcher, java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.DescribedAs.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>11.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.DescribedAs.describedAs(java.lang.String, org.hamcrest.Matcher, java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.DescribedAs.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.DescribedAs.static {}</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.core.Is</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.core.Is.Is(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.Is.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.Is.is(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.Is.is(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.Is.is(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.Is.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.core.IsAnything</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>7.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.core.IsAnything.IsAnything()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsAnything.IsAnything(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsAnything.any(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsAnything.anything()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsAnything.anything(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsAnything.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsAnything.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.core.IsEqual</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.core.IsEqual.IsEqual(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsEqual.areArrayElementsEqual(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsEqual.areArrayLengthsEqual(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsEqual.areArraysEqual(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsEqual.areEqual(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsEqual.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsEqual.equalTo(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsEqual.isArray(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsEqual.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.core.IsInstanceOf</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.core.IsInstanceOf.IsInstanceOf(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsInstanceOf.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsInstanceOf.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.core.IsNot</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.core.IsNot.IsNot(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsNot.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsNot.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsNot.not(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsNot.not(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.core.IsNull</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>7.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.core.IsNull.IsNull()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsNull.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsNull.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsNull.notNullValue()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsNull.notNullValue(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsNull.nullValue()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsNull.nullValue(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.core.IsSame</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.core.IsSame.IsSame(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsSame.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsSame.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.core.IsSame.sameInstance(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.hamcrest.internal</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>3.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>3.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>28.0</value>
                <minimum>7.0</minimum>
                <median>9.0</median>
                <average>9.333333333333334</average>
                <standard-deviation>2.0548046676563256</standard-deviation>
                <maximum>12.0</maximum>
                <sum>28.0</sum>
                <nb-data-points>3</nb-data-points>
            </measurement>
            <class>
                <name>org.hamcrest.internal.ArrayIterator</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.internal.ArrayIterator.ArrayIterator(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.internal.ArrayIterator.hasNext()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.internal.ArrayIterator.next()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.internal.ArrayIterator.remove()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.internal.SelfDescribingValue</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.internal.SelfDescribingValue.SelfDescribingValue(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.internal.SelfDescribingValue.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.hamcrest.internal.SelfDescribingValueIterator</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.hamcrest.internal.SelfDescribingValueIterator.SelfDescribingValueIterator(java.util.Iterator)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.internal.SelfDescribingValueIterator.hasNext()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.internal.SelfDescribingValueIterator.next()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.hamcrest.internal.SelfDescribingValueIterator.remove()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>14.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>12.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>220.0</value>
                <minimum>1.0</minimum>
                <median>2.0</median>
                <average>15.714285714285714</average>
                <standard-deviation>35.035550458332565</standard-deviation>
                <maximum>135.0</maximum>
                <sum>220.0</sum>
                <nb-data-points>14</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.Assert</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>42.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>7.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.Assert.Assert()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(byte[], byte[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(char[], char[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(double[], double[], double)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(float[], float[], float)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(int[], int[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(java.lang.String, byte[], byte[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(java.lang.String, char[], char[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(java.lang.String, double[], double[], double)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(java.lang.String, float[], float[], float)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(java.lang.String, int[], int[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(java.lang.String, long[], long[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(java.lang.String, short[], short[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(long[], long[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertArrayEquals(short[], short[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertEquals(double, double)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertEquals(double, double, double)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertEquals(java.lang.Object[], java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertEquals(java.lang.String, double, double)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertEquals(java.lang.String, double, double, double)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertEquals(java.lang.String, long, long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertEquals(long, long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertFalse(boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertFalse(java.lang.String, boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertNotNull(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertNull(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertNull(java.lang.String, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertThat(java.lang.String, java.lang.Object, org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertTrue(boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.assertTrue(java.lang.String, boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.fail()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.fail(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.failSame(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>8.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.formatClassAndValue(java.lang.Object, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assert.isEquals(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.Assume</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.Assume.Assume()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assume.assumeNoException(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assume.assumeNotNull(java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assume.assumeThat(java.lang.Object, org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Assume.assumeTrue(boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.ComparisonFailure</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <method>
                    <name>org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.ComparisonFailure.getActual()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.ComparisonFailure.getExpected()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.ComparisonFailure.getMessage()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.ComparisonFailure$ComparisonCompactor</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>7.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>8.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>8.0</value>
                </measurement>
                <method>
                    <name>org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>8.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.Ignore</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.Ignore.value()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.Test</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.Test.expected()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.Test.timeout()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.Test$None</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.Test$None.Test$None()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.experimental</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>3.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>1.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>35.0</value>
                <minimum>4.0</minimum>
                <median>15.0</median>
                <average>11.666666666666666</average>
                <standard-deviation>5.436502143433364</standard-deviation>
                <maximum>16.0</maximum>
                <sum>35.0</sum>
                <nb-data-points>3</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.experimental.ParallelComputer</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.ParallelComputer.ParallelComputer(boolean, boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.ParallelComputer.classes()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.ParallelComputer.getRunner(org.junit.runners.model.RunnerBuilder, java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.ParallelComputer.getSuite(org.junit.runners.model.RunnerBuilder, java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.ParallelComputer.methods()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.ParallelComputer.parallelize(org.junit.runner.Runner)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.ParallelComputer$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.ParallelComputer$1.ParallelComputer$1()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.ParallelComputer$1.finished()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.ParallelComputer$1.schedule(java.lang.Runnable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.ParallelComputer$1$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.ParallelComputer$1$1.ParallelComputer$1$1(org.junit.experimental.ParallelComputer$1, java.lang.Runnable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.ParallelComputer$1$1.call()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.experimental.categories</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>5.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>5.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>71.0</value>
                <minimum>2.0</minimum>
                <median>2.0</median>
                <average>14.2</average>
                <standard-deviation>15.497096502248414</standard-deviation>
                <maximum>39.0</maximum>
                <sum>71.0</sum>
                <nb-data-points>5</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.experimental.categories.Categories</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.categories.Categories.Categories(java.lang.Class, org.junit.runners.model.RunnerBuilder)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.categories.Categories.assertNoCategorizedDescendentsOfUncategorizeableParents(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.categories.Categories.assertNoDescendantsHaveCategoryAnnotations(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.categories.Categories.canHaveCategorizedChildren(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.categories.Categories.getExcludedCategory(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.categories.Categories.getIncludedCategory(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.categories.Categories$CategoryFilter</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.categories.Categories$CategoryFilter.Categories$CategoryFilter(java.lang.Class, java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.categories.Categories$CategoryFilter.categories(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.categories.Categories$CategoryFilter.describe()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.categories.Categories$CategoryFilter.directCategories(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.categories.Categories$CategoryFilter.hasCorrectCategoryAnnotation(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.categories.Categories$CategoryFilter.include(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.categories.Categories$CategoryFilter.parentDescription(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.categories.Categories$CategoryFilter.shouldRun(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.categories.Categories$ExcludeCategory</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.categories.Categories$ExcludeCategory.value()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.categories.Categories$IncludeCategory</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.categories.Categories$IncludeCategory.value()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.categories.Category</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.categories.Category.value()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.experimental.max</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>8.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>3.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>123.0</value>
                <minimum>0.0</minimum>
                <median>12.0</median>
                <average>15.375</average>
                <standard-deviation>16.255287601269934</standard-deviation>
                <maximum>46.0</maximum>
                <sum>123.0</sum>
                <nb-data-points>8</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.experimental.max.CouldNotReadCoreException</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.max.CouldNotReadCoreException.CouldNotReadCoreException(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.max.MaxCore</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>7.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.max.MaxCore.MaxCore(java.io.File)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxCore.buildRunner(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>11.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxCore.constructLeafRequest(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Description, org.junit.runner.Description, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Request)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxCore.forFolder(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxCore.getMalformedTestClass(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxCore.run(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxCore.run(org.junit.runner.Request)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxCore.run(org.junit.runner.Request, org.junit.runner.JUnitCore)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxCore.sortRequest(org.junit.runner.Request)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxCore.sortedLeavesForTest(org.junit.runner.Request)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxCore.storedLocally(java.io.File)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.max.MaxCore$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.max.MaxCore$1.MaxCore$1(org.junit.experimental.max.MaxCore, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxCore$1.getRunner()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.max.MaxCore$1$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.max.MaxCore$1$1.MaxCore$1$1(org.junit.experimental.max.MaxCore$1, java.lang.Class, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.max.MaxHistory</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.max.MaxHistory.MaxHistory(java.io.File)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory.forFolder(java.io.File)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory.getFailureTimestamp(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory.getTestDuration(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory.isNewTest(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory.listener()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory.putTestDuration(org.junit.runner.Description, long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory.putTestFailureTimestamp(org.junit.runner.Description, long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory.readHistory(java.io.File)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory.save()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory.testComparator()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.max.MaxHistory$RememberingListener</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.max.MaxHistory$RememberingListener.MaxHistory$RememberingListener(org.junit.experimental.max.MaxHistory)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory$RememberingListener.testFailure(org.junit.runner.notification.Failure)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory$RememberingListener.testFinished(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory$RememberingListener.testRunFinished(org.junit.runner.Result)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory$RememberingListener.testStarted(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.max.MaxHistory$TestComparator</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.max.MaxHistory$TestComparator.MaxHistory$TestComparator(org.junit.experimental.max.MaxHistory)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory$TestComparator.compare(org.junit.runner.Description, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.max.MaxHistory$TestComparator.getFailure(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.experimental.results</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>6.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>2.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>47.0</value>
                <minimum>5.0</minimum>
                <median>6.0</median>
                <average>7.833333333333333</average>
                <standard-deviation>3.6704525909242065</standard-deviation>
                <maximum>13.0</maximum>
                <sum>47.0</sum>
                <nb-data-points>6</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.experimental.results.FailureList</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.results.FailureList.FailureList(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.FailureList.result()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>8.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.results.PrintableResult</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.results.PrintableResult.PrintableResult(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.PrintableResult.PrintableResult(org.junit.runner.Result)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.PrintableResult.failureCount()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.PrintableResult.testResult(org.junit.runner.Request)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.PrintableResult.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.results.ResultMatchers</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers.ResultMatchers()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers.failureCountIs(int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers.isSuccessful()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.results.ResultMatchers$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers$1.ResultMatchers$1(int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers$1.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers$1.matchesSafely(org.junit.experimental.results.PrintableResult)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.results.ResultMatchers$2</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers$2.ResultMatchers$2(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers$2.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers$2.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.results.ResultMatchers$3</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers$3.ResultMatchers$3(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers$3.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.results.ResultMatchers$3.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.experimental.runners</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>1.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>1.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>3.0</value>
                <minimum>3.0</minimum>
                <median>3.0</median>
                <average>3.0</average>
                <standard-deviation>0.0</standard-deviation>
                <maximum>3.0</maximum>
                <sum>3.0</sum>
                <nb-data-points>1</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.experimental.runners.Enclosed</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.runners.Enclosed.Enclosed(java.lang.Class, org.junit.runners.model.RunnerBuilder)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.experimental.theories</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>14.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>10.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>145.0</value>
                <minimum>1.0</minimum>
                <median>6.0</median>
                <average>10.357142857142858</average>
                <standard-deviation>12.027392205515962</standard-deviation>
                <maximum>37.0</maximum>
                <sum>145.0</sum>
                <nb-data-points>14</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.experimental.theories.ParameterSignature</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>9.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.ParameterSignature.ParameterSignature(java.lang.Class, java.lang.annotation.Annotation[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.ParameterSignature.canAcceptArrayType(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.ParameterSignature.canAcceptType(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.ParameterSignature.findDeepAnnotation(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.ParameterSignature.findDeepAnnotation(java.lang.annotation.Annotation[], java.lang.Class, int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.ParameterSignature.getAnnotation(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.ParameterSignature.getAnnotations()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.ParameterSignature.getType()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.ParameterSignature.hasAnnotation(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.ParameterSignature.signatures(java.lang.Class[], java.lang.annotation.Annotation[][])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Constructor)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.ParameterSignature.signatures(java.lang.reflect.Method)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.ParameterSupplier</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.ParameterSupplier.ParameterSupplier()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.ParameterSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.ParametersSuppliedBy</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.ParametersSuppliedBy.value()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.PotentialAssignment</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.PotentialAssignment.PotentialAssignment()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.PotentialAssignment.getDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.PotentialAssignment.getValue()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.PotentialAssignment$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.PotentialAssignment$1.PotentialAssignment$1(java.lang.Object, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.PotentialAssignment$1.getDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.PotentialAssignment$1.getValue()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.PotentialAssignment$1.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException.PotentialAssignment$CouldNotGenerateValueException()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.Theories</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.Theories.Theories(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories.collectInitializationErrors(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories.computeTestMethods()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories.methodBlock(org.junit.runners.model.FrameworkMethod)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories.validateConstructor(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories.validateDataPointFields(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories.validateTestMethods(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.Theories$TheoryAnchor</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>9.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor.Theories$TheoryAnchor(org.junit.runners.model.FrameworkMethod, org.junit.runners.model.TestClass)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor.getTestClass()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor.methodCompletesWithParameters(org.junit.runners.model.FrameworkMethod, org.junit.experimental.theories.internal.Assignments, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor.runWithAssignment(org.junit.experimental.theories.internal.Assignments)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor.runWithCompleteAssignment(org.junit.experimental.theories.internal.Assignments)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor.runWithIncompleteAssignment(org.junit.experimental.theories.internal.Assignments)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.Theories$TheoryAnchor$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor$1.Theories$TheoryAnchor$1(org.junit.experimental.theories.Theories$TheoryAnchor, java.lang.Class, org.junit.experimental.theories.internal.Assignments)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor$1.collectInitializationErrors(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor$1.createTest()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor$1.methodBlock(org.junit.runners.model.FrameworkMethod)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor$1.methodInvoker(org.junit.runners.model.FrameworkMethod, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.Theories$TheoryAnchor$1$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor$1$1.Theories$TheoryAnchor$1$1(org.junit.experimental.theories.Theories$TheoryAnchor$1, org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor$1$1.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.Theories$TheoryAnchor$2</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor$2.Theories$TheoryAnchor$2(org.junit.experimental.theories.Theories$TheoryAnchor, org.junit.experimental.theories.internal.Assignments, org.junit.runners.model.FrameworkMethod, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.Theories$TheoryAnchor$2.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.Theory</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.Theory.nullsAccepted()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.experimental.theories.internal</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>5.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>3.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>117.0</value>
                <minimum>0.0</minimum>
                <median>18.0</median>
                <average>23.4</average>
                <standard-deviation>17.153425313913253</standard-deviation>
                <maximum>46.0</maximum>
                <sum>117.0</sum>
                <nb-data-points>5</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.experimental.theories.internal.AllMembersSupplier</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.internal.AllMembersSupplier.AllMembersSupplier(org.junit.runners.model.TestClass)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.AllMembersSupplier.addArrayValues(java.lang.String, java.util.List, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.AllMembersSupplier.addFields(org.junit.experimental.theories.ParameterSignature, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.AllMembersSupplier.addMultiPointMethods(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.AllMembersSupplier.addSinglePointMethods(org.junit.experimental.theories.ParameterSignature, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.AllMembersSupplier.getStaticFieldValue(java.lang.reflect.Field)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue.AllMembersSupplier$MethodParameterValue(org.junit.runners.model.FrameworkMethod)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue.getDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue.getValue()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.internal.Assignments</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>12.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.Assignments(java.util.List, java.util.List, org.junit.runners.model.TestClass)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.allUnassigned(java.lang.reflect.Method, org.junit.runners.model.TestClass)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.assignNext(org.junit.experimental.theories.PotentialAssignment)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.getActualValues(int, int, boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>8.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.getAllArguments(boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.getAnnotatedSupplier(org.junit.experimental.theories.ParameterSignature)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.getArgumentStrings(boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.getConstructorArguments(boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.getConstructorParameterCount()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.getMethodArguments(boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.getSupplier(org.junit.experimental.theories.ParameterSignature)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.isComplete()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.nextUnassigned()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.Assignments.potentialsForNextUnassigned()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.internal.ParameterizedAssertionError</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.internal.ParameterizedAssertionError.ParameterizedAssertionError(java.lang.Throwable, java.lang.String, java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.ParameterizedAssertionError.equals(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.ParameterizedAssertionError.join(java.lang.String, java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.ParameterizedAssertionError.join(java.lang.String, java.util.Collection)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.internal.ParameterizedAssertionError.stringValueOf(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.experimental.theories.suppliers</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>2.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>2.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>11.0</value>
                <minimum>2.0</minimum>
                <median>9.0</median>
                <average>5.5</average>
                <standard-deviation>3.5</standard-deviation>
                <maximum>9.0</maximum>
                <sum>11.0</sum>
                <nb-data-points>2</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.experimental.theories.suppliers.TestedOn</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.suppliers.TestedOn.ints()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.experimental.theories.suppliers.TestedOnSupplier</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.experimental.theories.suppliers.TestedOnSupplier.TestedOnSupplier()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.experimental.theories.suppliers.TestedOnSupplier.getValueSources(org.junit.experimental.theories.ParameterSignature)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.internal</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>8.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>8.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>140.0</value>
                <minimum>3.0</minimum>
                <median>18.0</median>
                <average>17.5</average>
                <standard-deviation>14.097872179871684</standard-deviation>
                <maximum>44.0</maximum>
                <sum>140.0</sum>
                <nb-data-points>8</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.internal.ArrayComparisonFailure</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.ArrayComparisonFailure.ArrayComparisonFailure(java.lang.String, java.lang.AssertionError, int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.ArrayComparisonFailure.addDimension(int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.ArrayComparisonFailure.getMessage()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>11.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.ArrayComparisonFailure.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.AssumptionViolatedException</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.AssumptionViolatedException.AssumptionViolatedException(java.lang.Object, org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.AssumptionViolatedException.AssumptionViolatedException(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.AssumptionViolatedException.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.AssumptionViolatedException.getMessage()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.ComparisonCriteria</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.ComparisonCriteria.ComparisonCriteria()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.ComparisonCriteria.arrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>19.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(java.lang.Object, java.lang.Object, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.ComparisonCriteria.assertElementsEqual(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.ComparisonCriteria.isArray(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.ExactComparisonCriteria</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.ExactComparisonCriteria.ExactComparisonCriteria()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.ExactComparisonCriteria.assertElementsEqual(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.InexactComparisonCriteria</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.InexactComparisonCriteria.InexactComparisonCriteria(double)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.InexactComparisonCriteria.assertElementsEqual(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.JUnitSystem</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.JUnitSystem.exit(int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.JUnitSystem.out()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.RealSystem</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.RealSystem.RealSystem()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.RealSystem.exit(int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.RealSystem.out()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.TextListener</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.TextListener.TextListener(java.io.PrintStream)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.TextListener.TextListener(org.junit.internal.JUnitSystem)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.TextListener.elapsedTimeAsString(long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.TextListener.getWriter()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.TextListener.printFailure(org.junit.runner.notification.Failure, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.TextListener.printFailures(org.junit.runner.Result)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.TextListener.printFooter(org.junit.runner.Result)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.TextListener.printHeader(long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.TextListener.testFailure(org.junit.runner.notification.Failure)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.TextListener.testIgnored(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.TextListener.testRunFinished(org.junit.runner.Result)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.TextListener.testStarted(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.internal.builders</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>8.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>8.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>70.0</value>
                <minimum>3.0</minimum>
                <median>8.0</median>
                <average>8.75</average>
                <standard-deviation>5.562148865321747</standard-deviation>
                <maximum>19.0</maximum>
                <sum>70.0</sum>
                <nb-data-points>8</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.internal.builders.AllDefaultPossibilitiesBuilder</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.builders.AllDefaultPossibilitiesBuilder.AllDefaultPossibilitiesBuilder(boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.AllDefaultPossibilitiesBuilder.annotatedBuilder()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.AllDefaultPossibilitiesBuilder.ignoredBuilder()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.AllDefaultPossibilitiesBuilder.junit3Builder()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.AllDefaultPossibilitiesBuilder.junit4Builder()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.AllDefaultPossibilitiesBuilder.suiteMethodBuilder()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.builders.AnnotatedBuilder</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.builders.AnnotatedBuilder.AnnotatedBuilder(org.junit.runners.model.RunnerBuilder)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.AnnotatedBuilder.buildRunner(java.lang.Class, java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.AnnotatedBuilder.runnerForClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.builders.IgnoredBuilder</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.builders.IgnoredBuilder.IgnoredBuilder()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.IgnoredBuilder.runnerForClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.builders.IgnoredClassRunner</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.builders.IgnoredClassRunner.IgnoredClassRunner(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.IgnoredClassRunner.getDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.IgnoredClassRunner.run(org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.builders.JUnit3Builder</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.builders.JUnit3Builder.JUnit3Builder()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.JUnit3Builder.isPre4Test(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.JUnit3Builder.runnerForClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.builders.JUnit4Builder</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.builders.JUnit4Builder.JUnit4Builder()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.JUnit4Builder.runnerForClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.builders.NullBuilder</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.builders.NullBuilder.NullBuilder()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.NullBuilder.runnerForClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.builders.SuiteMethodBuilder</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.builders.SuiteMethodBuilder.SuiteMethodBuilder()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.SuiteMethodBuilder.hasSuiteMethod(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.builders.SuiteMethodBuilder.runnerForClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.internal.matchers</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>7.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>6.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>77.0</value>
                <minimum>4.0</minimum>
                <median>10.0</median>
                <average>11.0</average>
                <standard-deviation>6.48074069840786</standard-deviation>
                <maximum>23.0</maximum>
                <sum>77.0</sum>
                <nb-data-points>7</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.internal.matchers.CombinableMatcher</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.matchers.CombinableMatcher.CombinableMatcher(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.CombinableMatcher.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.CombinableMatcher.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.CombinableMatcher.or(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.matchers.Each</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.matchers.Each.Each()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.Each.each(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.matchers.Each$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.matchers.Each$1.Each$1(org.hamcrest.Matcher, org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.Each$1.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.Each$1.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.matchers.IsCollectionContaining</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>8.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.matchers.IsCollectionContaining.IsCollectionContaining(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.IsCollectionContaining.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.IsCollectionContaining.hasItem(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.IsCollectionContaining.hasItem(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.IsCollectionContaining.hasItems(java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.IsCollectionContaining.hasItems(org.hamcrest.Matcher[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.IsCollectionContaining.matchesSafely(java.lang.Iterable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.matchers.StringContains</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.matchers.StringContains.StringContains(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.StringContains.containsString(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.StringContains.evalSubstringOf(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.StringContains.relationship()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.matchers.SubstringMatcher</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.matchers.SubstringMatcher.SubstringMatcher(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.SubstringMatcher.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.SubstringMatcher.evalSubstringOf(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.SubstringMatcher.matchesSafely(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.SubstringMatcher.relationship()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.matchers.TypeSafeMatcher</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.matchers.TypeSafeMatcher.TypeSafeMatcher()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.TypeSafeMatcher.TypeSafeMatcher(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.TypeSafeMatcher.findExpectedType(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.TypeSafeMatcher.isMatchesSafelyMethod(java.lang.reflect.Method)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.TypeSafeMatcher.matches(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.matchers.TypeSafeMatcher.matchesSafely(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.internal.requests</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>4.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>3.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>33.0</value>
                <minimum>1.0</minimum>
                <median>10.0</median>
                <average>8.25</average>
                <standard-deviation>4.264680527307995</standard-deviation>
                <maximum>12.0</maximum>
                <sum>33.0</sum>
                <nb-data-points>4</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.internal.requests.ClassRequest</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class, boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.requests.ClassRequest.getRunner()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.requests.FilterRequest</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.requests.FilterRequest.getRunner()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.requests.SortingRequest</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.requests.SortingRequest.getRunner()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.internal.runners</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>19.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>10.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>461.0</value>
                <minimum>0.0</minimum>
                <median>17.0</median>
                <average>24.263157894736842</average>
                <standard-deviation>23.24207189166178</standard-deviation>
                <maximum>81.0</maximum>
                <sum>461.0</sum>
                <nb-data-points>19</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.internal.runners.ClassRoadie</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.ClassRoadie.ClassRoadie(org.junit.runner.notification.RunNotifier, org.junit.internal.runners.TestClass, org.junit.runner.Description, java.lang.Runnable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.ClassRoadie.addFailure(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.ClassRoadie.runAfters()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>11.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.ClassRoadie.runBefores()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>13.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.ClassRoadie.runProtected()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.ClassRoadie.runUnprotected()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.ErrorReportingRunner</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(java.lang.Class, java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.ErrorReportingRunner.describeCause(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.ErrorReportingRunner.getCauses(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.ErrorReportingRunner.getDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.ErrorReportingRunner.runCause(java.lang.Throwable, org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.FailedBefore</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.FailedBefore.FailedBefore()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.InitializationError</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.InitializationError.InitializationError(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.InitializationError.getCauses()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.JUnit38ClassRunner</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>7.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner.JUnit38ClassRunner(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner.JUnit38ClassRunner(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner.createAdaptingListener(org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner.createSuiteDescription(junit.framework.TestSuite)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner.filter(org.junit.runner.manipulation.Filter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>14.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner.getDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner.getTest()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner.makeDescription(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>20.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner.run(org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner.setTest(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner.sort(org.junit.runner.manipulation.Sorter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener.JUnit38ClassRunner$OldTestClassAdaptingListener(org.junit.internal.runners.JUnit38ClassRunner, org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener.addError(junit.framework.Test, java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener.endTest(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener.getEffectiveClass(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener.getName(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener.startTest(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.JUnit4ClassRunner</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>13.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.JUnit4ClassRunner(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.classAnnotations()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.createTest()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.filter(org.junit.runner.manipulation.Filter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>8.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.getDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.getName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.getTestClass()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.getTestMethods()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>12.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.methodDescription(java.lang.reflect.Method)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.run(org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.runMethods(org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.sort(org.junit.runner.manipulation.Sorter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description, java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.testAnnotations(java.lang.reflect.Method)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.testName(java.lang.reflect.Method)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.validate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner.wrapMethod(java.lang.reflect.Method)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.JUnit4ClassRunner$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner$1.JUnit4ClassRunner$1(org.junit.internal.runners.JUnit4ClassRunner, org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner$1.run()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.JUnit4ClassRunner$2</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner$2.JUnit4ClassRunner$2(org.junit.internal.runners.JUnit4ClassRunner, org.junit.runner.manipulation.Sorter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.JUnit4ClassRunner$2.compare(java.lang.reflect.Method, java.lang.reflect.Method)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.MethodRoadie</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie.MethodRoadie(java.lang.Object, org.junit.internal.runners.TestMethod, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie.addFailure(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie.run()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>12.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie.runAfters()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>11.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie.runBefores()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>13.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(java.lang.Runnable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>11.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie.runTest()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie.runTestMethod()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>17.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie.runWithTimeout(long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.MethodRoadie$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie$1.MethodRoadie$1(org.junit.internal.runners.MethodRoadie, long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie$1.run()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>15.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.MethodRoadie$1$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie$1$1.MethodRoadie$1$1(org.junit.internal.runners.MethodRoadie$1)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie$1$1.call()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.MethodRoadie$2</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie$2.MethodRoadie$2(org.junit.internal.runners.MethodRoadie)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodRoadie$2.run()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.MethodValidator</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.MethodValidator.MethodValidator(org.junit.internal.runners.TestClass)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodValidator.assertValid()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodValidator.validateInstanceMethods()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodValidator.validateStaticMethods()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>14.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.SuiteMethod</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.SuiteMethod.SuiteMethod(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.SuiteMethod.testFromSuiteMethod(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.TestClass</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.TestClass.TestClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestClass.getAfters()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestClass.getAnnotatedMethods(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>12.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestClass.getBefores()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestClass.getConstructor()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestClass.getJavaClass()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestClass.getName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestClass.getSuperClasses(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestClass.getTestMethods()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method, java.lang.reflect.Method)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestClass.isShadowed(java.lang.reflect.Method, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestClass.runsTopToBottom(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.TestMethod</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.TestMethod.TestMethod(java.lang.reflect.Method, org.junit.internal.runners.TestClass)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestMethod.expectsException()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestMethod.getAfters()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestMethod.getBefores()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestMethod.getExpectedException()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestMethod.getTimeout()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestMethod.invoke(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestMethod.isIgnored()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.TestMethod.isUnexpected(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.internal.runners.model</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>3.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>3.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>32.0</value>
                <minimum>4.0</minimum>
                <median>6.0</median>
                <average>10.666666666666666</average>
                <standard-deviation>8.055363982396381</standard-deviation>
                <maximum>22.0</maximum>
                <sum>32.0</sum>
                <nb-data-points>3</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.internal.runners.model.EachTestNotifier</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.model.EachTestNotifier.EachTestNotifier(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.model.EachTestNotifier.addFailedAssumption(org.junit.internal.AssumptionViolatedException)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.model.EachTestNotifier.addFailure(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.model.EachTestNotifier.addMultipleFailureException(org.junit.runners.model.MultipleFailureException)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.model.EachTestNotifier.fireTestFinished()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.model.EachTestNotifier.fireTestIgnored()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.model.EachTestNotifier.fireTestStarted()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.model.MultipleFailureException</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.model.MultipleFailureException.MultipleFailureException(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.model.ReflectiveCallable</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.model.ReflectiveCallable.ReflectiveCallable()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.model.ReflectiveCallable.run()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.model.ReflectiveCallable.runReflectiveCall()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.internal.runners.rules</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>1.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>1.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>36.0</value>
                <minimum>36.0</minimum>
                <median>36.0</median>
                <average>36.0</average>
                <standard-deviation>0.0</standard-deviation>
                <maximum>36.0</maximum>
                <sum>36.0</sum>
                <nb-data-points>1</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.internal.runners.rules.RuleFieldValidator</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>8.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.rules.RuleFieldValidator.RuleFieldValidator(java.lang.String, int, java.lang.Class, boolean)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.rules.RuleFieldValidator.addError(java.util.List, org.junit.runners.model.FrameworkField, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.rules.RuleFieldValidator.isMethodRule(org.junit.runners.model.FrameworkField)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.rules.RuleFieldValidator.isTestRule(org.junit.runners.model.FrameworkField)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.rules.RuleFieldValidator.optionallyValidateStatic(org.junit.runners.model.FrameworkField, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.rules.RuleFieldValidator.static {}</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.rules.RuleFieldValidator.validate(org.junit.runners.model.TestClass, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.rules.RuleFieldValidator.validateField(org.junit.runners.model.FrameworkField, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.rules.RuleFieldValidator.validatePublic(org.junit.runners.model.FrameworkField, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.rules.RuleFieldValidator.validateTestRuleOrMethodRule(org.junit.runners.model.FrameworkField, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.rules.RuleFieldValidator.valueOf(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.rules.RuleFieldValidator.values()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.internal.runners.statements</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>7.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>6.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>113.0</value>
                <minimum>6.0</minimum>
                <median>13.0</median>
                <average>16.142857142857142</average>
                <standard-deviation>9.731077923386515</standard-deviation>
                <maximum>36.0</maximum>
                <sum>113.0</sum>
                <nb-data-points>7</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.internal.runners.statements.ExpectException</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.statements.ExpectException.ExpectException(org.junit.runners.model.Statement, java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.statements.ExpectException.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>13.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.statements.Fail</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.statements.Fail.Fail(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.statements.Fail.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.statements.FailOnTimeout</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.statements.FailOnTimeout.FailOnTimeout(org.junit.runners.model.Statement, long)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.statements.FailOnTimeout.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.statements.FailOnTimeout$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.statements.FailOnTimeout$1.FailOnTimeout$1(org.junit.internal.runners.statements.FailOnTimeout)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.statements.FailOnTimeout$1.run()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.statements.InvokeMethod</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.statements.InvokeMethod.InvokeMethod(org.junit.runners.model.FrameworkMethod, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.statements.InvokeMethod.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.statements.RunAfters</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.statements.RunAfters.RunAfters(org.junit.runners.model.Statement, java.util.List, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.statements.RunAfters.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>27.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.internal.runners.statements.RunBefores</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <method>
                    <name>org.junit.internal.runners.statements.RunBefores.RunBefores(org.junit.runners.model.Statement, java.util.List, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.internal.runners.statements.RunBefores.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.matchers</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>2.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>1.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>11.0</value>
                <minimum>1.0</minimum>
                <median>10.0</median>
                <average>5.5</average>
                <standard-deviation>4.5</standard-deviation>
                <maximum>10.0</maximum>
                <sum>11.0</sum>
                <nb-data-points>2</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.matchers.JUnitMatchers</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>9.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.matchers.JUnitMatchers.JUnitMatchers()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.matchers.JUnitMatchers.containsString(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.matchers.JUnitMatchers.either(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.matchers.JUnitMatchers.everyItem(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.matchers.JUnitMatchers.hasItem(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.matchers.JUnitMatchers.hasItem(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.matchers.JUnitMatchers.hasItems(java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.matchers.JUnitMatchers.hasItems(org.hamcrest.Matcher[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.rules</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>19.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>12.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>171.0</value>
                <minimum>2.0</minimum>
                <median>7.0</median>
                <average>9.0</average>
                <standard-deviation>6.043700504614179</standard-deviation>
                <maximum>27.0</maximum>
                <sum>171.0</sum>
                <nb-data-points>19</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.rules.ErrorCollector</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.ErrorCollector.ErrorCollector()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ErrorCollector.addError(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ErrorCollector.checkSucceeds(java.util.concurrent.Callable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ErrorCollector.checkThat(java.lang.Object, org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ErrorCollector.verify()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.ErrorCollector$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.ErrorCollector$1.ErrorCollector$1(org.junit.rules.ErrorCollector, java.lang.Object, org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ErrorCollector$1.call()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.ExpectedException</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.ExpectedException.ExpectedException()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExpectedException.apply(org.junit.runners.model.Statement, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExpectedException.expect(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExpectedException.expect(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExpectedException.expectMessage(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExpectedException.expectMessage(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExpectedException.hasMessage(org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExpectedException.none()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.ExpectedException$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.ExpectedException$1.ExpectedException$1(org.junit.rules.ExpectedException, org.hamcrest.Matcher)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExpectedException$1.describeTo(org.hamcrest.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExpectedException$1.matchesSafely(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.ExpectedException$ExpectedExceptionStatement</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.ExpectedException$ExpectedExceptionStatement.ExpectedException$ExpectedExceptionStatement(org.junit.rules.ExpectedException, org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.ExternalResource</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.ExternalResource.ExternalResource()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExternalResource.after()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExternalResource.apply(org.junit.runners.model.Statement, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExternalResource.before()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExternalResource.statement(org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.ExternalResource$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.ExternalResource$1.ExternalResource$1(org.junit.rules.ExternalResource, org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.ExternalResource$1.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.MethodRule</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.MethodRule.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.RunRules</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.RunRules.RunRules(org.junit.runners.model.Statement, java.lang.Iterable, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.RunRules.applyAll(org.junit.runners.model.Statement, java.lang.Iterable, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.RunRules.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.TemporaryFolder</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.TemporaryFolder.TemporaryFolder()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TemporaryFolder.after()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TemporaryFolder.before()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TemporaryFolder.create()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TemporaryFolder.delete()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TemporaryFolder.getRoot()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TemporaryFolder.newFile(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TemporaryFolder.newFolder(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TemporaryFolder.recursiveDelete(java.io.File)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.TestName</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.TestName.TestName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestName.getMethodName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestName.starting(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.TestRule</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.TestRule.apply(org.junit.runners.model.Statement, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.TestWatcher</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.TestWatcher.TestWatcher()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestWatcher.apply(org.junit.runners.model.Statement, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestWatcher.failed(java.lang.Throwable, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestWatcher.finished(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestWatcher.starting(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestWatcher.succeeded(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.TestWatcher$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.TestWatcher$1.TestWatcher$1(org.junit.rules.TestWatcher, org.junit.runner.Description, org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestWatcher$1.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.TestWatchman</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.TestWatchman.TestWatchman()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestWatchman.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestWatchman.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestWatchman.finished(org.junit.runners.model.FrameworkMethod)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestWatchman.starting(org.junit.runners.model.FrameworkMethod)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestWatchman.succeeded(org.junit.runners.model.FrameworkMethod)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.TestWatchman$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.TestWatchman$1.TestWatchman$1(org.junit.rules.TestWatchman, org.junit.runners.model.FrameworkMethod, org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.TestWatchman$1.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.Timeout</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.Timeout.Timeout(int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.Timeout.apply(org.junit.runners.model.Statement, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.Verifier</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.Verifier.Verifier()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.Verifier.apply(org.junit.runners.model.Statement, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.Verifier.verify()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.rules.Verifier$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.rules.Verifier$1.Verifier$1(org.junit.rules.Verifier, org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.rules.Verifier$1.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.runner</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>13.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>8.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>181.0</value>
                <minimum>0.0</minimum>
                <median>5.0</median>
                <average>13.923076923076923</average>
                <standard-deviation>18.436842456432544</standard-deviation>
                <maximum>59.0</maximum>
                <sum>181.0</sum>
                <nb-data-points>13</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.runner.Computer</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.Computer.Computer()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Computer.getRunner(org.junit.runners.model.RunnerBuilder, java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Computer.getSuite(org.junit.runners.model.RunnerBuilder, java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Computer.serial()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.Computer$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.Computer$1.Computer$1(org.junit.runner.Computer, org.junit.runners.model.RunnerBuilder)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Computer$1.runnerForClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.Describable</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.Describable.getDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.Description</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>20.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.Description.Description(java.lang.String, java.lang.annotation.Annotation[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.addChild(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.childlessCopy()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.createSuiteDescription(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.createSuiteDescription(java.lang.String, java.lang.annotation.Annotation[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String, java.lang.annotation.Annotation[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.equals(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.getAnnotation(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.getAnnotations()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.getChildren()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.getClassName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.getDisplayName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.getMethodName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.getTestClass()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.hashCode()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.isEmpty()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.isSuite()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.isTest()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.methodStringMatcher()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.parseMethod()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.static {}</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.testCount()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Description.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.JUnitCore</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>14.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.JUnitCore.JUnitCore()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.defaultComputer()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.getVersion()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.main(java.lang.String[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.removeListener(org.junit.runner.notification.RunListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.run(java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.run(junit.framework.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.run(org.junit.runner.Computer, java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.run(org.junit.runner.Request)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.runClasses(org.junit.runner.Computer, java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.runMain(org.junit.internal.JUnitSystem, java.lang.String[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>18.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.JUnitCore.runMainAndExit(org.junit.internal.JUnitSystem, java.lang.String[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.Request</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>12.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.Request.Request()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Request.aClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Request.classWithoutSuiteMethod(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Request.classes(java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Request.classes(org.junit.runner.Computer, java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Request.errorReport(java.lang.Class, java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Request.filterWith(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Request.getRunner()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Request.method(java.lang.Class, java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Request.runner(org.junit.runner.Runner)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Request.sortWith(java.util.Comparator)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.Request$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.Request$1.Request$1(org.junit.runner.Runner)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Request$1.getRunner()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.Result</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>8.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>5.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.Result.Result()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Result.createListener()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Result.getFailureCount()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Result.getFailures()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Result.getIgnoreCount()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Result.getRunCount()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Result.getRunTime()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Result.wasSuccessful()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.Result$Listener</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Result$Listener.testAssumptionFailure(org.junit.runner.notification.Failure)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Result$Listener.testFinished(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.RunWith</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.RunWith.value()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.Runner</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.Runner.Runner()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Runner.getDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.Runner.testCount()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.runner.manipulation</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>10.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>5.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>58.0</value>
                <minimum>1.0</minimum>
                <median>4.0</median>
                <average>5.8</average>
                <standard-deviation>4.728636167014756</standard-deviation>
                <maximum>16.0</maximum>
                <sum>58.0</sum>
                <nb-data-points>10</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.runner.manipulation.Filter</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.manipulation.Filter.Filter()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter.apply(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter.describe()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter.intersect(org.junit.runner.manipulation.Filter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter.matchMethodDescription(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter.shouldRun(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter.static {}</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.manipulation.Filter$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.manipulation.Filter$1.Filter$1()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter$1.apply(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter$1.describe()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter$1.intersect(org.junit.runner.manipulation.Filter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter$1.shouldRun(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.manipulation.Filter$2</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.manipulation.Filter$2.Filter$2(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter$2.describe()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter$2.shouldRun(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.manipulation.Filter$3</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.manipulation.Filter$3.Filter$3(org.junit.runner.manipulation.Filter, org.junit.runner.manipulation.Filter, org.junit.runner.manipulation.Filter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter$3.describe()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Filter$3.shouldRun(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.manipulation.Filterable</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.manipulation.Filterable.filter(org.junit.runner.manipulation.Filter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.manipulation.NoTestsRemainException</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.manipulation.NoTestsRemainException.NoTestsRemainException()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.manipulation.Sortable</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.manipulation.Sortable.sort(org.junit.runner.manipulation.Sorter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.manipulation.Sorter</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.manipulation.Sorter.Sorter(java.util.Comparator)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Sorter.apply(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Sorter.static {}</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.manipulation.Sorter$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.manipulation.Sorter$1.Sorter$1()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.manipulation.Sorter$1.compare(org.junit.runner.Description, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.runner.notification</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>13.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>4.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>104.0</value>
                <minimum>1.0</minimum>
                <median>4.0</median>
                <average>8.0</average>
                <standard-deviation>8.142953537119828</standard-deviation>
                <maximum>31.0</maximum>
                <sum>104.0</sum>
                <nb-data-points>13</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.runner.notification.Failure</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>7.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.Failure.getDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.Failure.getException()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.Failure.getMessage()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.Failure.getTestHeader()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.Failure.getTrace()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.Failure.toString()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.notification.RunListener</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>8.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.notification.RunListener.RunListener()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunListener.testAssumptionFailure(org.junit.runner.notification.Failure)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunListener.testFailure(org.junit.runner.notification.Failure)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunListener.testFinished(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunListener.testIgnored(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunListener.testRunFinished(org.junit.runner.Result)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunListener.testRunStarted(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunListener.testStarted(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.notification.RunNotifier</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>12.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.notification.RunNotifier.RunNotifier()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier.fireTestAssumptionFailed(org.junit.runner.notification.Failure)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier.fireTestIgnored(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier.fireTestRunFinished(org.junit.runner.Result)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier.fireTestRunStarted(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier.pleaseStop()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.notification.RunNotifier$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$1.notifyListener(org.junit.runner.notification.RunListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.notification.RunNotifier$2</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$2.notifyListener(org.junit.runner.notification.RunListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.notification.RunNotifier$3</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$3.notifyListener(org.junit.runner.notification.RunListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.notification.RunNotifier$4</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$4.notifyListener(org.junit.runner.notification.RunListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.notification.RunNotifier$5</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$5.notifyListener(org.junit.runner.notification.RunListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.notification.RunNotifier$6</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$6.notifyListener(org.junit.runner.notification.RunListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.notification.RunNotifier$7</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$7.RunNotifier$7(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$7.notifyListener(org.junit.runner.notification.RunListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.notification.RunNotifier$SafeNotifier</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$SafeNotifier.notifyListener(org.junit.runner.notification.RunListener)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runner.notification.RunNotifier$SafeNotifier.run()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runner.notification.StoppedByUserException</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.runner.notification.StoppedByUserException.StoppedByUserException()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.runners</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>15.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>8.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>276.0</value>
                <minimum>1.0</minimum>
                <median>4.0</median>
                <average>18.4</average>
                <standard-deviation>30.789175587100953</standard-deviation>
                <maximum>107.0</maximum>
                <sum>276.0</sum>
                <nb-data-points>15</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.runners.AllTests</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.AllTests.AllTests(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.BlockJUnit4ClassRunner</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>31.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.BlockJUnit4ClassRunner(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.collectInitializationErrors(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.computeTestMethods()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.createTest()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.describeChild(org.junit.runners.model.FrameworkMethod)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.expectsException(org.junit.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.getChildren()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.getExpectedException(org.junit.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.getMethodRules(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.getTestRules(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.getTimeout(org.junit.Test)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.hasOneConstructor()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.methodBlock(org.junit.runners.model.FrameworkMethod)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>11.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.methodInvoker(org.junit.runners.model.FrameworkMethod, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.possiblyExpectingExceptions(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.rules(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.runChild(org.junit.runners.model.FrameworkMethod, org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.testName(org.junit.runners.model.FrameworkMethod)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.validateConstructor(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.validateFields(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.validateInstanceMethods(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.validateOnlyOneConstructor(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.validateTestMethods(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.validateZeroArgConstructor(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.withAfters(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.withBefores(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.withMethodRules(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.withPotentialTimeout(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.withRules(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner.withTestRules(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.BlockJUnit4ClassRunner$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner$1.BlockJUnit4ClassRunner$1(org.junit.runners.BlockJUnit4ClassRunner)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.JUnit4</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.JUnit4.JUnit4(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.Parameterized</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.Parameterized.Parameterized(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Parameterized.getChildren()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Parameterized.getParametersList(org.junit.runners.model.TestClass)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Parameterized.getParametersMethod(org.junit.runners.model.TestClass)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(org.junit.runners.Parameterized, java.lang.Class, java.util.List, int)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.classBlock(org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.computeParams()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(org.junit.runners.model.FrameworkMethod)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.validateConstructor(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.ParentRunner</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>6.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>21.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>4.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.ParentRunner.ParentRunner(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.childrenInvoker(org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.classBlock(org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.classRules()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.collectInitializationErrors(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.comparator()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.describeChild(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.filter(org.junit.runner.manipulation.Filter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>13.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.getChildren()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.getDescription()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.getFilteredChildren()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.getName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.getTestClass()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.run(org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>12.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.runChild(java.lang.Object, org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.runChildren(org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.runLeaf(org.junit.runners.model.Statement, org.junit.runner.Description, org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>15.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.setScheduler(org.junit.runners.model.RunnerScheduler)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.shouldRun(org.junit.runner.manipulation.Filter, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.sort(org.junit.runner.manipulation.Sorter)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.sortChild(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.validate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.validateClassRules(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.validatePublicVoidNoArgMethods(java.lang.Class, boolean, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.withAfterClasses(org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.withBeforeClasses(org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner.withClassRules(org.junit.runners.model.Statement)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.ParentRunner$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.ParentRunner$1.ParentRunner$1(org.junit.runners.ParentRunner)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner$1.finished()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner$1.schedule(java.lang.Runnable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.ParentRunner$2</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.ParentRunner$2.ParentRunner$2(org.junit.runners.ParentRunner, org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner$2.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.ParentRunner$3</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.ParentRunner$3.ParentRunner$3(org.junit.runners.ParentRunner, java.lang.Object, org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner$3.run()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.ParentRunner$4</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.ParentRunner$4.ParentRunner$4(org.junit.runners.ParentRunner)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.ParentRunner$4.compare(java.lang.Object, java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.Suite</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>9.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Suite.Suite(java.lang.Class, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Suite.Suite(java.lang.Class, org.junit.runners.model.RunnerBuilder)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Suite.Suite(org.junit.runners.model.RunnerBuilder, java.lang.Class, java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Suite.Suite(org.junit.runners.model.RunnerBuilder, java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Suite.describeChild(org.junit.runner.Runner)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Suite.emptySuite()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Suite.getChildren()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.Suite.runChild(org.junit.runner.Runner, org.junit.runner.notification.RunNotifier)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.Suite$SuiteClasses</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.Suite$SuiteClasses.value()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
        <group>
            <name>org.junit.runners.model</name>
            <measurement>
                <short-name>C</short-name>
                <long-name>Classes</long-name>
                <value>10.0</value>
            </measurement>
            <measurement>
                <short-name>PuC</short-name>
                <long-name>Public Classes</long-name>
                <value>8.0</value>
            </measurement>
            <measurement>
                <short-name>SLOC</short-name>
                <long-name>Single Lines of Code</long-name>
                <value>181.0</value>
                <minimum>3.0</minimum>
                <median>15.0</median>
                <average>18.1</average>
                <standard-deviation>17.30577938146676</standard-deviation>
                <maximum>59.0</maximum>
                <sum>181.0</sum>
                <nb-data-points>10</nb-data-points>
            </measurement>
            <class>
                <name>org.junit.runners.model.FrameworkField</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>9.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.model.FrameworkField.FrameworkField(java.lang.reflect.Field)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkField.get(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkField.getAnnotations()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkField.getField()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkField.getName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkField.getType()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkField.isPublic()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkField.isShadowedBy(org.junit.runners.model.FrameworkField)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkField.isStatic()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.model.FrameworkMember</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.model.FrameworkMember.FrameworkMember()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMember.getAnnotations()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMember.isShadowedBy(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMember.isShadowedBy(org.junit.runners.model.FrameworkMember)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.model.FrameworkMethod</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>13.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod.FrameworkMethod(java.lang.reflect.Method)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod.equals(java.lang.Object)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod.getAnnotation(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod.getAnnotations()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod.getMethod()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod.getName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod.getParameterTypes()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod.hashCode()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod.invokeExplosively(java.lang.Object, java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod.isShadowedBy(org.junit.runners.model.FrameworkMethod)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod.producesType(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod.validatePublicVoid(boolean, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod.validatePublicVoidNoArg(boolean, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.model.FrameworkMethod$1</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod$1.FrameworkMethod$1(org.junit.runners.model.FrameworkMethod, java.lang.Object, java.lang.Object[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.FrameworkMethod$1.runReflectiveCall()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.model.InitializationError</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.model.InitializationError.InitializationError(java.lang.String)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.InitializationError.InitializationError(java.lang.Throwable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.InitializationError.InitializationError(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.InitializationError.getCauses()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.model.MultipleFailureException</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>2.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.model.MultipleFailureException.MultipleFailureException(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.MultipleFailureException.assertEmpty(java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>5.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.MultipleFailureException.getFailures()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.MultipleFailureException.getMessage()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>4.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.model.RunnerBuilder</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>5.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>1.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.model.RunnerBuilder.RunnerBuilder()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.RunnerBuilder.addParent(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.RunnerBuilder.removeParent(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>2.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.RunnerBuilder.runnerForClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.RunnerBuilder.runners(java.lang.Class, java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.RunnerBuilder.runners(java.lang.Class, java.util.List)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.RunnerBuilder.runners(java.lang.Class[])</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>7.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.RunnerBuilder.safeRunnerForClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.model.RunnerScheduler</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.model.RunnerScheduler.finished()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.RunnerScheduler.schedule(java.lang.Runnable)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.model.Statement</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>2.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.model.Statement.Statement()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.Statement.evaluate()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
            <class>
                <name>org.junit.runners.model.TestClass</name>
                <measurement>
                    <short-name>PuM</short-name>
                    <long-name>Public Methods</long-name>
                    <value>8.0</value>
                </measurement>
                <measurement>
                    <short-name>ProM</short-name>
                    <long-name>Protected Methods</long-name>
                    <value>4.0</value>
                </measurement>
                <measurement>
                    <short-name>PriM</short-name>
                    <long-name>Private Methods</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>A</short-name>
                    <long-name>Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <measurement>
                    <short-name>PuA</short-name>
                    <long-name>Public Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>ProA</short-name>
                    <long-name>Protected Attributes</long-name>
                    <value>0.0</value>
                </measurement>
                <measurement>
                    <short-name>PriA</short-name>
                    <long-name>Private Attributes</long-name>
                    <value>3.0</value>
                </measurement>
                <method>
                    <name>org.junit.runners.model.TestClass.TestClass(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>14.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.TestClass.addToAnnotationLists(org.junit.runners.model.FrameworkMember, java.util.Map)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>10.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.TestClass.getAnnotatedFieldValues(java.lang.Object, java.lang.Class, java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>9.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.TestClass.getAnnotatedFields(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.TestClass.getAnnotatedMembers(java.util.Map, java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.TestClass.getAnnotations()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.TestClass.getJavaClass()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.TestClass.getName()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.TestClass.getOnlyConstructor()</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>3.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.TestClass.getSuperClasses(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>6.0</value>
                    </measurement>
                </method>
                <method>
                    <name>org.junit.runners.model.TestClass.runsTopToBottom(java.lang.Class)</name>
                    <measurement>
                        <short-name>SLOC</short-name>
                        <long-name>Single Lines of Code</long-name>
                        <value>1.0</value>
                    </measurement>
                </method>
            </class>
        </group>
    </project>
</metrics>
